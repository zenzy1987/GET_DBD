name: dbd-one

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      tax_id:
        description: "ถ้าว่างจะอ่านจาก tax_ids.txt"
        required: false
      limit:
        description: "จำนวนต่อรอบ (0=ทั้งหมด)"
        required: false
        default: "20"
      skip_existing:
        description: "none/sheet/json/both"
        required: false
        default: "sheet"
  schedule:
    # ทุก 30 นาที (UTC) → ไทย = UTC+7
    - cron: "*/30 * * * *"

concurrency:
  group: dbd-one-${{ github.ref }}
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Setup Chrome
        id: chrome
        uses: browser-actions/setup-chrome@v1

      - name: Remove stale chromedriver in PATH
        run: sudo rm -f /usr/bin/chromedriver || true

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt

      - name: Run DBD batch → Google Sheets
        env:
          CHROME_PATH: ${{ steps.chrome.outputs.chrome-path }}
          CHROME_BIN:  ${{ steps.chrome.outputs.chrome-path }}
          GOOGLE_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}
          SHEET_ID: ${{ vars.SHEET_ID }}

          INPUT_TAX_ID:  ${{ github.event_name == 'workflow_dispatch' && inputs.tax_id || '' }}
          INPUT_LIMIT:   ${{ github.event_name == 'workflow_dispatch' && inputs.limit || '' }}
          INPUT_SKIP:    ${{ github.event_name == 'workflow_dispatch' && inputs.skip_existing || '' }}
        run: |
          set -euo pipefail
          LIMIT="${INPUT_LIMIT:-20}"
          SKIP="${INPUT_SKIP:-sheet}"

          echo "Chrome at: ${CHROME_PATH:-unset}"
          python -V

          ARGS=( --list-file tax_ids.txt --limit "$LIMIT" --skip-existing "$SKIP" --logs-dir logs )
          if [ -n "${INPUT_TAX_ID:-}" ]; then
            ARGS+=( --tax-id "$INPUT_TAX_ID" )
          fi

          python dbd_one.py "${ARGS[@]}" | tee result.txt

          echo "## DBD Result (last 300 lines)" >> "$GITHUB_STEP_SUMMARY"
          tail -n 300 result.txt || true >> "$GITHUB_STEP_SUMMARY"

      - name: Commit JSON results to repo
        env:
          GH_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
          GH_NAME: github-actions[bot]
        run: |
          set -e
          git config user.name  "$GH_NAME"
          git config user.email "$GH_EMAIL"
          git add -A data logs || true
          if ! git diff --cached --quiet -- data logs; then
            git commit -m "DBD batch $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            git pull --rebase origin "${{ github.ref_name }}" || true
            git push origin HEAD:"${{ github.ref_name }}"
          else
            echo "Nothing to commit"
          fi

      - name: Upload JSONs and debug artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dbd-artifacts
          path: |
            data/*.json
            data/_debug/*.png
            data/_debug/*.html
            logs/*.txt
          if-no-files-found: ignore
